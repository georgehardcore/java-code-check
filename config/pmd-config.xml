<?xml version="1.0"?>

<ruleset name="YarFructConvensions">

    <!-- Special rules concerning android development -->
    <rule ref="rulesets/java/android.xml" />

    <!-- Basic rules. Unfortunately we can only enable some checks, not
         disable them. So there are so many basic checks defined -->
    <rule ref="rulesets/java/basic.xml/JumbledIncrementer" /> 
    <rule ref="rulesets/java/basic.xml/ForLoopShouldBeWhileLoop" /> 
    <rule ref="rulesets/java/basic.xml/OverrideBothEqualsAndHashcode" /> 
    <rule ref="rulesets/java/basic.xml/DoubleCheckedLocking" /> 
    <rule ref="rulesets/java/basic.xml/ReturnFromFinallyBlock" /> 
    <rule ref="rulesets/java/basic.xml/UnconditionalIfStatement" /> 
    <rule ref="rulesets/java/basic.xml/BooleanInstantiation" /> 
    <rule ref="rulesets/java/basic.xml/CollapsibleIfStatements" /> 
    <rule ref="rulesets/java/basic.xml/ClassCastExceptionWithToArray" /> 
    <rule ref="rulesets/java/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor" /> 
    <rule ref="rulesets/java/basic.xml/MisplacedNullCheck" /> 
    <rule ref="rulesets/java/basic.xml/BrokenNullCheck" />
    <rule ref="rulesets/java/basic.xml/BigIntegerInstantiation" />
    <rule ref="rulesets/java/basic.xml/AvoidUsingOctalValues" />
    <rule ref="rulesets/java/basic.xml/AvoidUsingHardCodedIP" />
    <rule ref="rulesets/java/basic.xml/CheckResultSet" />
    <rule ref="rulesets/java/basic.xml/AvoidMultipleUnaryOperators" />
    <rule ref="rulesets/java/basic.xml/DontCallThreadRun" />

    <!-- Empty statements catching -->
    <rule ref="rulesets/java/empty.xml" /> 

    <!-- Checks for unnecessary things -->
    <rule ref="rulesets/java/unnecessary.xml" />
 
    <!-- Clone implementation rules -->
    <rule ref="rulesets/java/clone.xml" />

    <!-- Another code size tests -->
    <rule ref="pmd-config_codesize.xml"/>

    <!-- Some controversial checks -->
    <rule ref="rulesets/java/controversial.xml/UnnecessaryConstructor" />
    <rule ref="rulesets/java/controversial.xml/NullAssignment" />
    <rule ref="rulesets/java/controversial.xml/DontImportSun" />
    <rule ref="rulesets/java/controversial.xml/UnnecessaryParentheses" />

    <!-- Code coupling check -->
    <rule ref="rulesets/java/coupling.xml/CouplingBetweenObjects" />
    <rule ref="rulesets/java/coupling.xml/ExcessiveImports">
        <properties>
            <property name="minimum" value="35" />
        </properties>
    </rule>

    <!-- Some rules for design -->
   
    <rule ref="rulesets/java/design.xml/SimplifyBooleanReturns" />
    <rule ref="rulesets/java/design.xml/SimplifyBooleanExpressions" />
    <rule ref="rulesets/java/design.xml/AvoidDeeplyNestedIfStmts" />
    <rule ref="rulesets/java/design.xml/AvoidReassigningParameters" />
    <rule ref="rulesets/java/design.xml/SwitchDensity" />
    <rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod" />
    <rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic" />
    <rule ref="rulesets/java/design.xml/CloseResource" />
    <rule ref="rulesets/java/design.xml/DefaultLabelNotLastInSwitchStmt" />
    <rule ref="rulesets/java/design.xml/NonCaseLabelInSwitchStatement" />
    <rule ref="rulesets/java/design.xml/OptimizableToArrayCall" />
    <rule ref="rulesets/java/design.xml/BadComparison" />
    <rule ref="rulesets/java/design.xml/EqualsNull" />
    <rule ref="rulesets/java/design.xml/ConfusingTernary" />
    <rule ref="rulesets/java/design.xml/InstantiationToGetClass" />
    <rule ref="rulesets/java/design.xml/IdempotentOperations" />
    <rule ref="rulesets/java/design.xml/SimpleDateFormatNeedsLocale" />
    <rule ref="rulesets/java/design.xml/ImmutableField" />
    <rule ref="rulesets/java/design.xml/UseLocaleWithCaseConversions" />
    <rule ref="rulesets/java/design.xml/AvoidProtectedFieldInFinalClass" />
    <rule ref="rulesets/java/design.xml/AssignmentToNonFinalStatic" />
    <rule ref="rulesets/java/design.xml/AvoidSynchronizedAtMethodLevel" />
    <rule ref="rulesets/java/design.xml/MissingBreakInSwitch" />
    <rule ref="rulesets/java/design.xml/UseNotifyAllInsteadOfNotify" />
    <rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause" />
    <rule ref="rulesets/java/design.xml/AbstractClassWithoutAbstractMethod" />
    <rule ref="rulesets/java/design.xml/SimplifyConditional" />
    <rule ref="rulesets/java/design.xml/CompareObjectsWithEquals" />
    <rule ref="rulesets/java/design.xml/PositionLiteralsFirstInComparisons" />
    <rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn" />
    <rule ref="rulesets/java/design.xml/UncommentedEmptyMethod" />
    <rule ref="rulesets/java/design.xml/AvoidConstantsInterface" />
    <rule ref="rulesets/java/design.xml/UnsynchronizedStaticDateFormatter" />
    <rule ref="rulesets/java/design.xml/PreserveStackTrace" />
    <rule ref="rulesets/java/design.xml/UseCollectionIsEmpty" />
    <rule ref="rulesets/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal" />
    <rule ref="rulesets/java/design.xml/EmptyMethodInAbstractClassShouldBeAbstract" />
    <rule ref="rulesets/java/design.xml/SingularField" />
    <rule ref="rulesets/java/design.xml/ReturnEmptyArrayRatherThanNull" />
    <rule ref="rulesets/java/design.xml/AbstractClassWithoutAnyMethod" />
    
    <!-- Checkers for method finalize() -->
    <rule ref="rulesets/java/finalizers.xml" />

    <!-- Check for import rules -->
    <rule ref="rulesets/java/imports.xml" />

    <!-- Cool naming rules -->
    <rule ref="rulesets/java/naming.xml/ShortVariable">
        <properties>
            <property name="violationSuppressRegex" value=".*like [xyzijk].*"/>
        </properties>
    </rule>
    <rule ref="rulesets/java/naming.xml/ShortMethodName" />
    <rule ref="rulesets/java/naming.xml/MethodNamingConventions" />
    <rule ref="rulesets/java/naming.xml/ClassNamingConventions" />
    <rule ref="rulesets/java/naming.xml/AvoidDollarSigns" />
    <rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass" />
    <rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName" />
    <rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName" />
    <rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingTypeName" />
    <rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingMethodName" />
    <rule ref="rulesets/java/naming.xml/NoPackage" />
    <rule ref="rulesets/java/naming.xml/PackageCase" />
    <rule ref="rulesets/java/naming.xml/GenericsNaming" />
    
    <!-- Some base optimization considerations -->
    <rule ref="pmd-config_optimizations.xml"/>

    <!-- Strict exception checks -->
    <rule ref="rulesets/java/strictexception.xml" />

    <!-- Some checks for unforgivable string usage -->
    <rule ref="rulesets/java/strings.xml" />
    
    <!-- Unused code rules -->
    <rule ref="rulesets/java/unusedcode.xml" />    
</ruleset>
